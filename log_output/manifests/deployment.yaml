apiVersion: v1
kind: Namespace
metadata:
  name: exercises

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-output
  namespace: exercises
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-output
  template:
    metadata:
      labels:
        app: log-output
    spec:
      containers:
        - name: writer
          image: gcr.io/k8s-course-466712/log_output:gcr
          command: ["node", "writer.js"]

        - name: reader
          image: gcr.io/k8s-course-466712/log_output:gcr
          command: ["node", "reader.js"]
          ports:
            - containerPort: 3000
          env:
            - name: PING_PONG_HOST
              value: "ping-pong-svc"
            - name: PING_PONG_PORT
              value: "80"
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: log-output-config
                  key: MESSAGE
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
          readinessProbe:
            httpGet:
              path: /status
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: log-output-config
            items:
              - key: information.txt
                path: information.txt

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: log-output-ingress
  namespace: exercises
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: log-output-svc
                port:
                  number: 80
          - path: /pingpong
            pathType: Prefix
            backend:
              service:
                name: ping-pong-svc
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: log-output-svc
  namespace: exercises
spec:
  type: NodePort
  selector:
    app: log-output
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: log-output-config
  namespace: exercises
data:
  information.txt: |
    this text is from file
  MESSAGE: hello there!
